/*
괄호
문제
괄호 문자열(Parenthesis String, PS)은 두 개의 괄호 기호인 ‘(’ 와 ‘)’ 만으로 구성되어 있는 문자열이다. 
그 중에서 괄호의 모양이 바르게 구성된 문자열을 올바른 괄호 문자열(Valid PS, VPS)이라고 부른다. 
 쌍의 괄호 기호로 된 “( )” 문자열은 기본 VPS 이라고 부른다. 만일 x 가 VPS 라면 이것을 하나의 괄호에 넣은 새로운 문자열 “(x)”도 VPS 가 된다. 
 그리고 두 VPS x 와 y를 접합(concatenation)시킨 새로운 문자열 xy도 VPS 가 된다. 예를 들어 “(())()”와 “((()))” 는 VPS 이지만 
 “(()(”, “(())()))” , 그리고 “(()” 는 모두 VPS 가 아닌 문자열이다. 

여러분은 입력으로 주어진 괄호 문자열이 VPS 인지 아닌지를 판단해서 그 결과를 YES 와 NO 로 나타내어야 한다. 

입력
입력 데이터는 표준 입력을 사용한다. 입력은 T개의 테스트 데이터로 주어진다. 입력의 첫 번째 줄에는 입력 데이터의 수를 나타내는 정수 T가 주어진다. 
각 테스트 데이터의 첫째 줄에는 괄호 문자열이 한 줄에 주어진다. 하나의 괄호 문자열의 길이는 2 이상 50 이하이다. 

출력
출력은 표준 출력을 사용한다. 만일 입력 괄호 문자열이 올바른 괄호 문자열(VPS)이면 “YES”, 아니면 “NO”를 한 줄에 하나씩 차례대로 출력해야 한다. 
*/

#include <string>
#include <iostream>
using namespace std;
int main(){
    int T;
    cin >> T;
    while(T--){
        int sum = 0;
        string str;
        cin >> str;

        for(char c : str){
            c == '(' ? ++sum : --sum;
            if(sum < 0) break;
        }
        cout << (sum == 0 ? "YES\n" : "NO\n");
    }
}

/*
이 문제는 (와 )을 스택을 활용해 문제를 해결할 수 있다

다만 (인 경우 +1을 )인 경우 -1 을 하여 최종 결과가 0이라면 문제가 해결된 것으로 확인할 수 있지 않을까?

다만 음수가 중간 과정에서 한번이라도 발생한다면 잘못된 결우이다
이 경우에는 더이상 확인을 하지 않고 NO를 출력한다

최종적으로 모든 괄호를 확인했을때 합이 0이 된다면 올바른 VPS인 경우로 판단할 수 있다

----------------------------------------------------------------------------------
즉 여기서 사용한 sum은 스택의 크기를 의미한다
모든 입력을 받았을 때 0이 되는 경우는 괄호의 쌍이 맞아 적절하게 VPS가 이루어진 경우이고
도중 과정에서 음수가 발생하는 경우는 스택이 비어있는데도 pop연산을 호출해 error가 발생한 경우이다
stack이 empty일 때 pop을 수행할 수 없으므로 no를 출력해야 하는 것이다

*/

// #include <stack>
// #include <string>
// #include <iostream>
// using namespace std;
// int main(){
//     int T;
//     cin >> T;
//     while(T--){
//         string str;
//         cin >> str;
//         stack<char> s;
//         for(char c : str){
//             c == '(' ? s.push('(') : s.pop();
//         }
//     }
// }